ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000)) +
facet_wrap(~cut)
library(ggplot2)
library(gridExtra)
grid.arrange(Fair, Good, V_Good,Prem, Ideal, ncol=1)
Fair <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Fair')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
Good <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Good')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
V_Good <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Very Good')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
Prem <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Premium')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
Ideal <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Ideal')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
grid.arrange(Fair, Good, V_Good,Prem, Ideal, ncol=1)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000)) +
facet_wrap(~cut)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth =100,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000)) +
facet_wrap(~cut)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth =100,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 2000)) +
facet_wrap(~cut)
?facet_wrap
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth =100,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 2000)) +
facet_wrap(~cut, scales="free_x")
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth =100,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 2000)) +
facet_wrap(~cut, scales="free_y")
summary(diamonds)
ggplot(aes(x = price, y=carat), data = diamonds) +
geom_histogram(binwidth =100,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 2000)) +
facet_wrap(~cut, scales="free_y")
ggplot(aes(x = price, y=carat), data = diamonds) +
geom_histogram(binwidth =100,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 2000)) +
facet_wrap(~cut)
ggplot(aes(x = price, y=carat), data = diamonds) +
geom_histogram(color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 2000)) +
facet_wrap(~cut)
?aes
ggplot(aes(x = price), data = diamonds) +
geom_histogram(color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 2000)) +
facet_wrap(~cut)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(color = 'black', fill = '#099DD9') +
scale_x_log10() +
facet_wrap(~cut)
by(diamonds$price,diamonds$cut, summary)
by(diamonds$price,diamonds$cut)
by(diamonds$price,diamonds$cut, summary)
summary(diamonds)
diamonds$priceCarat <- diamonds$carat * diamonds$price
ggplot(aes(x = priceCarat ), data = diamonds) +
geom_histogram(color = 'black', fill = '#099DD9') +
scale_x_log10() +
facet_wrap(~cut)
install.packages("tidyr")
library(ggplot2)
library(gridExtra)
summary(diamonds)
function (..., list = character(), package = NULL, lib.loc = NULL,
verbose = getOption("verbose"), envir = .GlobalEnv)
ggplot(aes(y = price, x = color),
data= diamonds) +
geom_boxplot(aes(color = gender)) +
coord_cartesian(ylim = c(0,1000))
ggplot(aes(y = price, x = color),
data = diamonds) +
geom_boxplot(aes(color = color)) +
coord_cartesian(ylim = c(0,1000))
ggplot(aes(y = price, x = color),
data = diamonds) +
geom_boxplot(aes(color = color)) +
coord_cartesian()
by(diamonds$price,diamonds$color, summary)
ggplot(aes(y = price, x = cut),
data = diamonds) +
geom_boxplot(aes(color = cut)) +
coord_cartesian()
7695-1860
4514-911
4214-911
?diamonds
diamonds$priceCarat <- diamonds$price/diamonds$carat
ggplot(aes(y = priceCarat, x = cut),
data = diamonds) +
geom_boxplot(aes(color = cut)) +
coord_cartesian()
summary(diamonds$priceCarat)
by(diamonds$priceCarat, diamonds$cut, summary)
ggplot(aes(y = priceCarat, x = color),
data = diamonds) +
geom_boxplot(aes(color = color)) +
coord_cartesian()
by(diamonds$priceCarat, diamonds$color, summary)
ggplot(aes(x = priceCarat ), data = diamonds) +
geom_histogram(color = 'black', fill = '#099DD9') +
scale_x_log10() +
facet_wrap(~cut)
?facet_wrap
ggplot(aes(x = priceCarat ), data = diamonds) +
geom_histogram(color = 'black', fill = '#099DD9') +
scale_x_log10() +
facet_wrap(~cut, scales = "free_y")
likes_given <- ggplot(aes(x = likes),
data = subset(fb_data, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
likes_received <- ggplot(aes(x = likes_received),
data= subset(fb_data, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
grid.arrange(likes_given, likes_received, ncol=1)
likes_given <- ggplot(aes(x = likes),
data = subset(fb_data, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
likes_received <- ggplot(aes(x = likes_received),
data= subset(fb_data, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
grid.arrange(likes_given, likes_received, ncol=1)
library(ggplot2)
library(gridExtra)
fb_data <- read.csv("data/pseudo_facebook.tsv", sep = "\t")
theme_set(theme_minimal(24))
likes_given <- ggplot(aes(x = likes),
data = subset(fb_data, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
likes_received <- ggplot(aes(x = likes_received),
data= subset(fb_data, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
fb_data <- read.csv("data/pseudo_facebook.tsv", sep = "\t")
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly() +
scale_x_log10()
?geom_freqpoly
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=50) +
scale_x_log10()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.5) +
scale_x_log10()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.25) +
scale_x_log10()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_log10()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.05) +
scale_x_log10()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.05) +
scale_x_log10(limits = c(0, 10000), breaks = seq(0, 10000, 0.1))
?geom_freqpoly
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_log10(limits = c(0, 10000), breaks = seq(0, 10000, 0.1))
?seq
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_log10(limits = c(0, 10000), breaks = seq(0, 10000, by = 0.1))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_log10(limits = c(0, 10000), breaks = seq(by = 0.1))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_log10(breaks = seq(by = 0.1))
?breaks
?break
?breaks
??breaks
?scale_x_log10()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_log10(breaks = 0.1)
?scale_x_log10()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_log10()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_continuous()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.2) +
scale_x_continuous()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.2) +
scale_x_continuous(limits = c(0, 6), breaks = seq(0, 6,0.5))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.5) +
scale_x_continuous(limits = c(0, 6), breaks = seq(0, 6,0.5))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_continuous(limits = c(0, 6), breaks = seq(0, 6,0.5))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_continuous(limits = c(0, 6), breaks = seq(0, 6,0.1))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_continuous(limits = c(0, 6), breaks = seq(0, 6,0.2))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_continuous(limits = c(0, 6), breaks = seq(0, 6,0.25))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.05) +
scale_x_continuous(limits = c(0, 3), breaks = seq(0, 3,0.2))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.05) +
scale_x_continuous(limits = c(0, 2), breaks = seq(0, 2,0.2))
setwd("~/GitHub/Data_Analyst_ND/Lesson2-R/lesson5")
library(ggplot2)
read.csv("yogurt.csv")
yg <- read.csv("yogurt.csv")
summary(yg)
head(yg)
View(yg)
library(dplyr)
?factor
yg$id <- factor(yg$id)
summary(yg)
str(yg)
ggplot(aes(x = price),
data = yg) +
geom_bar()
ggplot(aes(x = price),
data = yg) +
geom_bar(binwidth = 5)
ggplot(aes(x = price),
data = yg) +
geom_histogram(binwidth = 5)
ggplot(aes(x = price),
data = yg) +
geom_histogram(binwidth = 2)
?transform
yg <- transform(yg, all.purchases = strawberry + blueberry + pina.colada + plain + mixed.berry)
summary(yg)
purchases.house = group_by(yg$id)
purchases.house = group_by(yg, id)
purchases.house = group_by(yg, id)
purchases.house <- group_by(yg, id)
purchases.house <- summarise(purchases.house,
money_spent = sum(price),
yogurt_bought = sum(all.purchases),
n = n())
head(purchases.house)
arrange(purchases.house, money_spent)
?arrange
arrange(purchases.house, money_spent, decreasing = TRUE)
?arrange
summary(purchases.house)
summary(yg$all.purchases)
summary(yg)
#Price / Time
ggplot(aes(x = time, y = price),
data = yg) +
geom_point()
#Price / Time
ggplot(aes(x = time, y = price),
data = yg) +
geom_point(alpha = 0.5)
#Price / Time
ggplot(aes(x = time, y = price),
data = yg) +
geom_point(alpha = 0.1)
#Price / Time
ggplot(aes(x = time, y = price),
data = yg) +
geom_jitter(alpha = 0.1)
#Create Samples of Data
set.seed(4230)
sample.ids <- sample(levels(yg$id),16)
?sample.ids
??sample.ids
?sample
?facet_wrap()
ggplot(aes(x = time, y = price),
data = subset(yg, id %in% sample.ids)) +
facet_wrap(~ id) +
geom_line() +
geom_point(aes(size = all.purchases, pch = 1))
#Create Samples of Data
set.seed(4230)
sample.ids <- sample(levels(yg$id),16)
ggplot(aes(x = time, y = price),
data = subset(yg, id %in% sample.ids)) +
facet_wrap(~ id) +
geom_line() +
geom_point(aes(size = all.purchases, pch = 1))
ggplot(aes(x = time, y = price),
data = subset(yg, id %in% sample.ids)) +
facet_wrap(~ id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 1)
ggplot(aes(x = time, y = price),
data = subset(yg, id %in% sample.ids)) +
facet_wrap(~ id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 0.5)
ggplot(aes(x = time, y = price),
data = subset(yg, id %in% sample.ids)) +
facet_wrap(~ id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 2)
ggplot(aes(x = time, y = price),
data = subset(yg, id %in% sample.ids)) +
facet_wrap(~ id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 0)
ggplot(aes(x = time, y = price),
data = subset(yg, id %in% sample.ids)) +
facet_wrap(~ id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 1)
#Create Samples of Data
set.seed(1884)
sample.ids <- sample(levels(yg$id),16)
ggplot(aes(x = time, y = price),
data = subset(yg, id %in% sample.ids)) +
facet_wrap(~ id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 1)
