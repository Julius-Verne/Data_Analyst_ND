data(diamonds)
install.packages("ggplot2")
library(ggplot2)
data(diamonds)
diamonds <- data(diamonds)
summary(diamonds)
summary(diamonds)
diamond <- data(diamonds)
summary(diamond)
data(diamonds)
data(diamonds)
summary(diamond)
data(diamonds)
summary(diamonds)
str(diamonds)
by(diamonds$color, diamonds$price, summary)
by(diamonds$price,diamonds$color, summary)
?diamonds
ggplot(aes(x = price), data = diamonds)
ggplot(aes(x = price), data = diamonds)
ggplot(aes(x = price), data = diamonds)+
geom_histogram()
ggplot(aes(x = price), data = diamonds)+
geom_histogram() +
scale_x_continuous()
ggplot(aes(x = price), data = diamonds)+
geom_histogram() +
scale_x_log10()
ggplot(aes(x = price), data = diamonds)+
geom_histogram(binwidth = 10) +
scale_x_log10()
ggplot(aes(x = price), data = diamonds)+
geom_histogram(binwidth = 10)
ggplot(aes(x = price), data = diamonds)+
geom_histogram(binwidth = 10)
summary(diamonds$price)
ggplot(aes(x = price), data = diamonds)+
geom_histogram(binwidth = 100)
ggplot(aes(x = price), data = diamonds)+
geom_histogram(binwidth = 100,color = 'black', fill = '#099DD9')
less <- diamonds$price <= 500
less <- diamonds$price < 500
summary(diamonds)
diamonds$less_500 <- ifelse(diamonds$price<500,TRUE,FALSE)
summary(diamonds$less_500)
diamonds$less_500 <- ifelse(diamonds$price<250,TRUE,FALSE)
summary(diamonds$less_500)
diamonds$less_500 <- ifelse(diamonds$price<250,TRUE,FALSE)
summary(diamonds$less_500)
diamonds$less_500 <- ifelse(diamonds$price>=15000,TRUE,FALSE)
summary(diamonds$less_500)
ggplot(aes(x = price), data = diamonds)+
geom_histogram(binwidth = 100,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
ggplot(aes(x = price), data = diamonds)+
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
summary(diamonds$price)
summary(diamonds)
diamonds$
ggplot(aes(x = price), data = subset(diamonds, cut == 'Fair')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
ggplot(aes(x = price), data = subset(diamonds, cut == 'Fair')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
Fair <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Fair')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
Good <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Fair')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
V_Good <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Fair')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
Prem <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Fair')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
Fair <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Fair')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
Good <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Good')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
V_Good <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Very Good')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
Prem <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Premium')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
Ideal <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Ideal')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
grid.arrange(Fair, Good, V_Good,Prem, Ideal, ncol=1)
install.packages("gridExtra")
library(ggplot2)
library(gridExtra)
grid.arrange(Fair, Good, V_Good,Prem, Ideal, ncol=1)
by(diamonds$price,diamonds$cut, summary)
ggplot(aes(x = price), data = subset(diamonds, cut == 'Ideal')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000)) +
facet_wrap(~cut)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000)) +
facet_wrap(~cut)
library(ggplot2)
library(dplyr)
data(diamonds)
head(diamonds)
order_clarity <- group_by(diamonds, clarity)
dm_order_clarity <- summarise(order_clarity,
price_mean = mean(price),
price_median = median(as.numeric(price)),
n = n())
dm_order_clarity <- summarise(order_clarity,
price_mean = mean(price),
price_median = median(as.numeric(price)),
price_max = max(price),
price_min = min(price),
n = n())
summary(dm_order_clarity)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
ggplot(aes(x = diamonds_by_clarity, y = mean_price),
data = diamonds_mp_by_clarity) +
geom_bar()
summary(diamonds_mp_by_clarity)
head(diamonds_mp_by_clarity)
str(diamonds_mp_by_clarity)
ggplot(aes(x = diamonds_by_clarity, y = mean_price),
data = diamonds_mp_by_clarity) +
geom_bar()
ggplot(aes(x = diamonds_by_clarity, y = mean_price),
data = diamonds_mp_by_clarity) +
geom_bar(stat = "identity")
ggplot(aes(x = diamonds_by_clarity, y = mean_price),
data = diamonds_mp_by_clarity)
ggplot(aes(x = diamonds_by_clarity, y = mean_price),
data = diamonds_mp_by_clarity)
ggplot(aes(x = diamonds_by_clarity, y = mean_price),
data = diamonds_mp_by_clarity) +
geom_bar(stat = 'identity')
library(ggplot2)
library(gridExtra)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(dplyr)
fb_data <- read.csv("data/pseudo_facebook.tsv", sep = "\t")
setwd("~/GitHub/Data_Analyst_ND/Lesson2-R/lesson3/MyFiles")
fb_data <- read.csv("data/pseudo_facebook.tsv", sep = "\t")
pf.fc_by_age_gender <- group_by(subset(fb_data, !is.na(gender)), gender, age)
pf.fc_by_age_gender <- summarise(pf.fc_by_age_gender,
mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)),
n = n())
pf.fc_by_age_gender
ggplot(aes(x = age, y = median_friend_count),
data = pf.fc_by_age_gender) +
geom_line(aes(color=gender))
ggplot(aes(x = age, y = friend_count),
data = subset(fb_data, !is.na(gender))) +
geom_line(aes(color = gender), stat = "summary", fun.y = median) +
xlim(13,70)
ggplot(aes(x = age, y = friend_count),
data = subset(fb_data, !is.na(gender))) +
geom_line(aes(color = gender), stat = "summary", fun.y = median)
pf.fc_by_age_gender <- summarise(pf.fc_by_age_gender,
mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)),
n = n())
pf.fc_by_age_gender
ggplot(aes(x = age, y = median_friend_count),
data = pf.fc_by_age_gender) +
geom_line(aes(color=gender))
ggplot(aes(x = age, y = friend_count),
data = subset(fb_data, !is.na(gender))) +
geom_line(aes(color = gender), stat = "summary", fun.y = median)
library(reshape2)
install.packages("reshape2")
library(reshape2)
library(ggplot2)
library(gridExtra)
library(dplyr)
library(ggplot2) %>%
library(gridExtra) %>%
library(dplyr) %>%
library(reshape2)
library(ggplot2) %>%
library(gridExtra) %>%
library(dplyr) %>%
library(reshape2)
library(ggplot2)
library(gridExtra)
library(dplyr)
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = median_friend_count)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = 'median_friend_count')
pf.fc_by_age_gender.wide
ggplot(aes(x = age, y = female/male),
data = pf.fc_by_age_gender.wide) +
geom_hline()
?geom_hline
ggplot(aes(x = age, y = female/male),
data = pf.fc_by_age_gender.wide) +
geom_hline(yintercept = 10)
ggplot(aes(x = age, y = female/male),
data = pf.fc_by_age_gender.wide) +
geom_hline(yintercept = 1)
?geom_hline
ggplot(aes(x = age, y = female/male),
data = pf.fc_by_age_gender.wide) +
geom_hline(yintercept = female)
ggplot(aes(x = age, y = female/male),
data = pf.fc_by_age_gender.wide) +
geom_line()
ggplot(aes(x = age, y = female/male),
data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1)
ggplot(aes(x = age, y = female/male),
data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, alpha = 0.5)
ggplot(aes(x = age, y = female/male),
data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, alpha = 0.2)
ggplot(aes(x = age, y = female/male),
data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, alpha = 0.2, linetype =2)
ggplot(aes(x = age, y = female/male),
data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, alpha = 0.3, linetype =2)
head(fb_data)
fb_data <- read.csv("data/pseudo_facebook.tsv", sep = "\t")
summary(fb_data)
head(fb_data)
summary(fb_data)
?floor
fb_data$year_joined <- floor((fb_data$tenure/365) + 2014)
head(fb_data)
summary(fb_data)
ggplot(aes(x = tenure),
data = fb_data)+
geom_bar()
ggplot(aes(x = year_joined),
data = fb_data)+
geom_bar()
ggplot(aes(x = year_joined, y = friend_count),
data = fb_data)+
geom_line()
ggplot(aes(x = year_joined, y = friend_count),
data = fb_data)+
geom_bar()
ggplot(aes(x = year_joined, y = friend_count),
data = fb_data)+
geom_point()
fb_data$year_joined <- (fb_data$tenure/365) + 2014
ggplot(aes(x = year_joined, y = friend_count),
data = fb_data)+
geom_point()
fb_data$year_joined <- floor(2014 - (fb_data$tenure/365))
ggplot(aes(x = year_joined, y = friend_count),
data = fb_data)+
geom_point()
?cut
fb_data$year_joined.bucket <- cut(fb_data,
c(2004,2009,2011,2012,2014))
fb_data$year_joined.bucket <- cut(fb_data$year_joined,
c(2004,2009,2011,2012,2014))
View(fb_data)
ggplot(aes(x = age, y = friend_count),
data = fb_data) +
geom_line(aes(color=year_joined.bucket))
ggplot(aes(x = age, y = friend_count),
data = subset(fb_data, !is.na(year_joined.bucket))) +
geom_line(aes(color=year_joined.bucket))
ggplot(aes(x = age, y = friend_count),
data = subset(fb_data, !is.na(year_joined.bucket))) +
geom_line(aes(color=year_joined.bucket), binwidth = 5)
?geom_line
ggplot(aes(x = age, y = friend_count),
data = subset(fb_data, !is.na(year_joined.bucket))) +
geom_line(aes(color=year_joined.bucket), stat = "summary", fun.y = median)
ggplot(aes(x = age, y = friend_count),
data = subset(fb_data, !is.na(year_joined.bucket))) +
geom_line(aes(color=year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(aes(x = age, y = friend_count),
data = subset(fb_data, !is.na(year_joined.bucket))) +
geom_line(aes(color=year_joined.bucket), stat = "summary", fun.y = mean) +
geom_smooth()
?geom_smooth
ggplot(aes(x = age, y = friend_count),
data = subset(fb_data, !is.na(year_joined.bucket))) +
geom_line(aes(color=year_joined.bucket), stat = "summary", fun.y = mean) +
geom_smooth()
ggplot(aes(x = age, y = friend_count),
data = subset(fb_data, !is.na(year_joined.bucket))) +
geom_line(aes(color=year_joined.bucket), stat = "summary", fun.y = mean) +
geom_smooth(linetype =4 )
ggplot(aes(x = age, y = friend_count),
data = subset(fb_data, !is.na(year_joined.bucket))) +
geom_line(aes(color=year_joined.bucket), stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = mean, linetype = 3)
ggplot(aes(x = age, y = friend_count),
data = subset(fb_data, !is.na(year_joined.bucket))) +
geom_line(aes(color=year_joined.bucket), stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = mean, linetype = 4)
tenure.group <- group_by(subset(fb_data, !is.na(tenure)), tenure)
tenure.group <- summarise(tenure.group,
median_fc = median(as.numeric(friend_count)),
mean-fc = mean(friend_count),
n = n())
tenure.group <- summarise(tenure.group,
median_fc = median(as.numeric(friend_count)),
mean_fc = mean(friend_count),
n = n())
head(tenure.group)
tenure.group <- group_by(subset(fb_data, tenure > 1, tenure)
tenure.group <- summarise(tenure.group,
median_fc = median(as.numeric(friend_count)),
mean_fc = mean(friend_count),
n = n())
tenure.group <- group_by(subset(fb_data, tenure >= 1, tenure)
tenure.group <- group_by(subset(fb_data, tenure >= 1), tenure)
tenure.group <- group_by(subset(fb_data, tenure >= 1), tenure)
tenure.group <- summarise(tenure.group,
median_fc = median(as.numeric(friend_count)),
mean_fc = mean(friend_count),
n = n())
head(tenure.group)
max(tenure.group$median_fc)
tenure.group <- summarise(tenure.group,
median_fc = median(as.numeric(friend_count)),
mean_fc = mean(friend_count),
rate = friend_count/tenure
n = n())
tenure.group <- summarise(tenure.group,
median_fc = median(as.numeric(friend_count)),
mean_fc = mean(friend_count),
rate = friend_count/tenure,
n = n())
fb_data$tenure_rate <- fb_data$friend_count/fb_data$tenure
fb_data$tenure_rate <- fb_data$friend_count/fb_data$tenure
max(fb_data$tenure_rate)
tenure.group <- summarise(tenure.group,
median_fc = median(as.numeric(friend_count)),
mean_fc = mean(friend_count),
rate = friend_count/tenure,
n = n())
tenure.group <- summarise(tenure.group,
median_fc = median(as.numeric(friend_count)),
mean_fc = mean(friend_count),
rate = (friend_count/tenure),
n = n())
no_NA_tenure <- subset(fb_data, tenure >= 1), tenure)
no_NA_tenure <- subset(fb_data, tenure >= 1, tenure)
no_NA_tenure <- subset(fb_data, tenure >= 1)
no_NA_tenure$tenure_rate <- no_NA_tenure$friend_count/no_NA_tenure$tenure
max(no_NA_tenure$tenure_rate)
summary(no_NA_tenure$tenure_rate)
ggplot(aes(x = tenure, y = friendships_initiated),
data = subset(fb_data, tenure>=1)) +
geom_line(aes(color=year_joined.bucket), stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = mean, linetype = 4)
ggplot(aes(x = tenure, y = friendships_initiated),
data = subset(fb_data, tenure>=1)) +
geom_line(aes(color=year_joined.bucket), stat = "summary", fun.y = mean) +
ggplot(aes(x = tenure, y = friendships_initiated),
data = subset(fb_data, tenure>=1)) +
geom_line(aes(color=year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated),
data = subset(fb_data, tenure>=1)) +
geom_line(aes(color=year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated/tenure),
data = subset(fb_data, tenure>=1)) +
geom_line(aes(color=year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated/tenure),
data = subset(fb_data, tenure>=1)) +
geom_smooth(aes(color=year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(aes(x =  7 * round(tenure / 7), y = friendships_initiated/tenure),
data = subset(fb_data, tenure>=1)) +
geom_smooth(aes(color=year_joined.bucket), stat = "summary", fun.y = mean)
ggplot(aes(x =  7 * round(tenure / 7), y = friendships_initiated/tenure),
data = subset(fb_data, tenure>=1)) +
geom_smooth(aes(color=year_joined.bucket))
