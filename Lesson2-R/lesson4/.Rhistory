ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000)) +
facet_wrap(~cut)
library(ggplot2)
library(gridExtra)
grid.arrange(Fair, Good, V_Good,Prem, Ideal, ncol=1)
Fair <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Fair')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
Good <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Good')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
V_Good <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Very Good')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
Prem <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Premium')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
Ideal <- ggplot(aes(x = price), data = subset(diamonds, cut == 'Ideal')) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000))
grid.arrange(Fair, Good, V_Good,Prem, Ideal, ncol=1)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 50,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000)) +
facet_wrap(~cut)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth =100,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 1000)) +
facet_wrap(~cut)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth =100,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 2000)) +
facet_wrap(~cut)
?facet_wrap
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth =100,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 2000)) +
facet_wrap(~cut, scales="free_x")
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth =100,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 2000)) +
facet_wrap(~cut, scales="free_y")
summary(diamonds)
ggplot(aes(x = price, y=carat), data = diamonds) +
geom_histogram(binwidth =100,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 2000)) +
facet_wrap(~cut, scales="free_y")
ggplot(aes(x = price, y=carat), data = diamonds) +
geom_histogram(binwidth =100,color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 2000)) +
facet_wrap(~cut)
ggplot(aes(x = price, y=carat), data = diamonds) +
geom_histogram(color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 2000)) +
facet_wrap(~cut)
?aes
ggplot(aes(x = price), data = diamonds) +
geom_histogram(color = 'black', fill = '#099DD9') +
scale_x_continuous(limits = c(0, 10000), breaks = seq(0, 10000, 2000)) +
facet_wrap(~cut)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(color = 'black', fill = '#099DD9') +
scale_x_log10() +
facet_wrap(~cut)
by(diamonds$price,diamonds$cut, summary)
by(diamonds$price,diamonds$cut)
by(diamonds$price,diamonds$cut, summary)
summary(diamonds)
diamonds$priceCarat <- diamonds$carat * diamonds$price
ggplot(aes(x = priceCarat ), data = diamonds) +
geom_histogram(color = 'black', fill = '#099DD9') +
scale_x_log10() +
facet_wrap(~cut)
install.packages("tidyr")
library(ggplot2)
library(gridExtra)
summary(diamonds)
function (..., list = character(), package = NULL, lib.loc = NULL,
verbose = getOption("verbose"), envir = .GlobalEnv)
ggplot(aes(y = price, x = color),
data= diamonds) +
geom_boxplot(aes(color = gender)) +
coord_cartesian(ylim = c(0,1000))
ggplot(aes(y = price, x = color),
data = diamonds) +
geom_boxplot(aes(color = color)) +
coord_cartesian(ylim = c(0,1000))
ggplot(aes(y = price, x = color),
data = diamonds) +
geom_boxplot(aes(color = color)) +
coord_cartesian()
by(diamonds$price,diamonds$color, summary)
ggplot(aes(y = price, x = cut),
data = diamonds) +
geom_boxplot(aes(color = cut)) +
coord_cartesian()
7695-1860
4514-911
4214-911
?diamonds
diamonds$priceCarat <- diamonds$price/diamonds$carat
ggplot(aes(y = priceCarat, x = cut),
data = diamonds) +
geom_boxplot(aes(color = cut)) +
coord_cartesian()
summary(diamonds$priceCarat)
by(diamonds$priceCarat, diamonds$cut, summary)
ggplot(aes(y = priceCarat, x = color),
data = diamonds) +
geom_boxplot(aes(color = color)) +
coord_cartesian()
by(diamonds$priceCarat, diamonds$color, summary)
ggplot(aes(x = priceCarat ), data = diamonds) +
geom_histogram(color = 'black', fill = '#099DD9') +
scale_x_log10() +
facet_wrap(~cut)
?facet_wrap
ggplot(aes(x = priceCarat ), data = diamonds) +
geom_histogram(color = 'black', fill = '#099DD9') +
scale_x_log10() +
facet_wrap(~cut, scales = "free_y")
likes_given <- ggplot(aes(x = likes),
data = subset(fb_data, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
likes_received <- ggplot(aes(x = likes_received),
data= subset(fb_data, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
grid.arrange(likes_given, likes_received, ncol=1)
likes_given <- ggplot(aes(x = likes),
data = subset(fb_data, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
likes_received <- ggplot(aes(x = likes_received),
data= subset(fb_data, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
grid.arrange(likes_given, likes_received, ncol=1)
library(ggplot2)
library(gridExtra)
fb_data <- read.csv("data/pseudo_facebook.tsv", sep = "\t")
theme_set(theme_minimal(24))
likes_given <- ggplot(aes(x = likes),
data = subset(fb_data, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
likes_received <- ggplot(aes(x = likes_received),
data= subset(fb_data, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
fb_data <- read.csv("data/pseudo_facebook.tsv", sep = "\t")
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly() +
scale_x_log10()
?geom_freqpoly
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=50) +
scale_x_log10()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.5) +
scale_x_log10()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.25) +
scale_x_log10()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_log10()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.05) +
scale_x_log10()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.05) +
scale_x_log10(limits = c(0, 10000), breaks = seq(0, 10000, 0.1))
?geom_freqpoly
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_log10(limits = c(0, 10000), breaks = seq(0, 10000, 0.1))
?seq
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_log10(limits = c(0, 10000), breaks = seq(0, 10000, by = 0.1))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_log10(limits = c(0, 10000), breaks = seq(by = 0.1))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_log10(breaks = seq(by = 0.1))
?breaks
?break
?breaks
??breaks
?scale_x_log10()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_log10(breaks = 0.1)
?scale_x_log10()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_log10()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_continuous()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.2) +
scale_x_continuous()
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.2) +
scale_x_continuous(limits = c(0, 6), breaks = seq(0, 6,0.5))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.5) +
scale_x_continuous(limits = c(0, 6), breaks = seq(0, 6,0.5))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_continuous(limits = c(0, 6), breaks = seq(0, 6,0.5))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_continuous(limits = c(0, 6), breaks = seq(0, 6,0.1))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_continuous(limits = c(0, 6), breaks = seq(0, 6,0.2))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_continuous(limits = c(0, 6), breaks = seq(0, 6,0.25))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.05) +
scale_x_continuous(limits = c(0, 3), breaks = seq(0, 3,0.2))
ggplot(aes(x = carat),
data = diamonds) +
geom_freqpoly(binwidth=0.05) +
scale_x_continuous(limits = c(0, 2), breaks = seq(0, 2,0.2))
setwd("~/GitHub/Data_Analyst_ND/Lesson2-R/lesson4")
read.csv("CPI_DATA.csv")
#Load Libraries
library(ggplot2)
library(gridExtra)
read.csv("CPI_DATA.csv")
data <- read.csv("CPI_DATA.csv")
global_med_2008 <- sum(data$X2008)
ggplot(aes(y = x2008),
data = data) +
geom_boxplot() +
coord_cartesian()
summary(data)
ggplot(aes(y = data$X2008),
data = data) +
geom_boxplot() +
coord_cartesian()
ggplot(aes(y = data$X2008),
data = data) +
geom_boxplot() +
coord_cartesian()
ggplot(aes(x = data$X2008),
data = data) +
geom_histogram()
ggplot(aes(x = data$X2008),
data = data) +
geom_histogram(binwidth = 0.1)
ggplot(aes(x = data$X2008),
data = data) +
geom_histogram(binwidth = 0.25)
data_2008 <- ggplot(aes(x = data$X2008),
data = data) +
geom_histogram(binwidth = 0.25)
data_2009 <- ggplot(aes(x = data$X2009),
data = data) +
geom_histogram(binwidth = 0.25)
grid.arrange(data_2008, data_2009, ncol=1)
data_2008 <- ggplot(aes(x = data$X2008),
data = data) +
geom_histogram(binwidth = 0.2)
data_2009 <- ggplot(aes(x = data$X2009),
data = data) +
geom_histogram(binwidth = 0.2)
grid.arrange(data_2008, data_2009, ncol=1)
?geom_boxplot
global_med_2008 <- median(data$X2008)
summary(data$X2008)
data <- read.csv("birtdaysExample.csv")
summary(data)
data <- read.csv("birtdaysExample.csv")
data <- read.csv("birthdaysExample.csv")
summary(data)
View(data)
data_2008 <- ggplot(aes(x = dates),
data = data) +
geom_histogram(binwidth = 0.2)
ggplot(aes(x = dates),
data = data) +
geom_histogram(binwidth = 1)
?stat
summary(data)
ggplot(aes(x = dates),
data = data) +
geom_histogram(stat=count, binwidth = 1)
?ggplot()
?geom_histogram()
ggplot(aes(x = dates),
data = data) +
geom_histogram( binwidth = 1)
summary(data)
str(data)
ggplot(aes(x = dates),
data = data) +
geom_histogram( binwidth = 1)
ggplot(aes(x = dates),
data = data) +
geom_histogram( binwidth = 1) +
scale_x_date()
d_date <- as.Date(data$dates)
summary(data)
data$d_date <- as.Date(data$dates)
data$d_date <- a.Date(data$dates)
data$d_date <- as.Date(data$dates)
?as.Date
data$d_date <- as.Date(data$dates, "%m/%d/%y")
summary(data)
str(data)
ggplot(aes(x = dates),
data = data) +
geom_histogram( binwidth = 1) +
scale_x_date()
ggplot(aes(x = d_date),
data = data) +
geom_histogram( binwidth = 1) +
scale_x_date()
ggplot(aes(x = d_date),
data = data) +
geom_histogram( binwidth = 30) +
scale_x_date()
ggplot(aes(x = d_date),
data = data) +
geom_histogram( binwidth = 15) +
scale_x_date()
ggplot(aes(x = d_date),
data = data) +
geom_histogram( binwidth = 1) +
scale_x_date()
ggplot(aes(x = d_date),
data = data) +
geom_histogram( binwidth = 1) +
scale_x_date(breaks = seq(0, 12, 12))
ggplot(aes(x = d_date),
data = data) +
geom_histogram( binwidth = 1, breaks = seq(0, 12, 12)) +
scale_x_date()
ggplot(aes(x = d_date),
data = data) +
geom_histogram( binwidth = 1, breaks = seq(0, 360, 30)) +
scale_x_date()
ggplot(aes(x = d_date),
data = data) +
geom_histogram( binwidth = 1) +
scale_x_date()
summary(data$dates)
ggplot(aes(x = d_date),
data = data) +
geom_histogram( binwidth = 30) +
scale_x_date()
data$d_date <- as.Date(data$dates, "%m/%d/%y")
data$year = as.ordered(format(data$date, format = "%Y"))
data$month = as.ordered(format(data$date, format = "%m"))
data$day = as.ordered(format(data$date, format = "%d"))
summary(data$dates)
str(data)
ggplot(aes(x = month),
data = data) +
geom_histogram( binwidth = 30) +
scale_x_date()
ggplot(aes(x = month),
data = data) +
geom_histogram()
ggplot(aes(x = month),
data = data) +
geom_histogram(stat = "count")
summary(data)
data$d_date <- as.Date(data$dates, "%m/%d/%y")
data$year = as.ordered(format(data$d_date, format = "%y"))
data$month = as.ordered(format(data$d_date, format = "%m"))
data$day = as.ordered(format(data$d_date, format = "%d"))
summary(data)
str(data)
ggplot(aes(x = month),
data = data) +
geom_histogram(stat = "count")
ggplot(aes(x = year),
data = data) +
geom_histogram(stat = "count")
ggplot(aes(x = day),
data = data) +
geom_histogram(stat = "count")
ggplot(aes(x = d_date),
data = data) +
geom_histogram() +
scale_x_date()
ggplot(aes(x = d_date),
data = data) +
geom_histogram(binwidth =  1) +
scale_x_date()
ggplot(aes(x = d_date),
data = data) +
geom_histogram(binwidth =  2) +
scale_x_date()
ggplot(aes(x = day),
data = subset(data, month = "05")) +
geom_histogram(binwidth =  2) +
scale_x_date()
ggplot(aes(x = day),
data = subset(data, month == "05")) +
geom_histogram(binwidth =  2) +
scale_x_date()
ggplot(aes(x = day),
data = subset(data, month == "05")) +
geom_histogram() +
?as.Date
ggplot(aes(x = day),
data = subset(data, month == "05")) +
geom_histogram()
ggplot(aes(x = day),
data = subset(data, month == "05")) +
geom_histogram(stat = "count")
ggplot(aes(x = day),
data = data) +
geom_histogram(stat = "count") +
facet_wrap(~month)
ggplot(aes(x = month),
data = data) +
geom_histogram(stat = "count")
